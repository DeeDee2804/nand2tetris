// Bootstrap init 
@256
D=A
@SP
M=D
// Call Sys.init 
@sys.init$ret.0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@4
D=A
@SP
D=M-D
@ARG
M=D
@SP
MD=M+1
@LCL
M=D
@sys.init
0; JMP
(sys.init$ret.0)
// function class1.set 0 
(class1.set)
// push argument 0 
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
// pop static 0 
@SP
AM=M-1
D=M
@Class1.0
M=D
// push argument 1 
@1
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
// pop static 1 
@SP
AM=M-1
D=M
@Class1.1
M=D
// push constant 0 
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// return 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0; JMP
// function class1.get 0 
(class1.get)
// push static 0 
@Class1.0
D=M
@SP
AM=M+1
A=A-1
M=D
// push static 1 
@Class1.1
D=M
@SP
AM=M+1
A=A-1
M=D
// sub 
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0; JMP
// function class2.set 0 
(class2.set)
// push argument 0 
@0
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
// pop static 0 
@SP
AM=M-1
D=M
@Class2.0
M=D
// push argument 1 
@1
D=A
@ARG
A=D+M
D=M
@SP
AM=M+1
A=A-1
M=D
// pop static 1 
@SP
AM=M-1
D=M
@Class2.1
M=D
// push constant 0 
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// return 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0; JMP
// function class2.get 0 
(class2.get)
// push static 0 
@Class2.0
D=M
@SP
AM=M+1
A=A-1
M=D
// push static 1 
@Class2.1
D=M
@SP
AM=M+1
A=A-1
M=D
// sub 
@SP
AM=M-1
D=M
A=A-1
M=M-D
// return 
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0; JMP
// function sys.init 0 
(sys.init)
// push constant 6 
@6
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 8 
@8
D=A
@SP
AM=M+1
A=A-1
M=D
// call class1.set 2 
@class1.set$ret.0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
MD=M+1
@LCL
M=D
@class1.set
0; JMP
(class1.set$ret.0)
// pop temp 0 
@SP
AM=M-1
D=M
@5
M=D
// push constant 23 
@23
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 15 
@15
D=A
@SP
AM=M+1
A=A-1
M=D
// call class2.set 2 
@class2.set$ret.0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@6
D=A
@SP
D=M-D
@ARG
M=D
@SP
MD=M+1
@LCL
M=D
@class2.set
0; JMP
(class2.set$ret.0)
// pop temp 0 
@SP
AM=M-1
D=M
@5
M=D
// call class1.get 0 
@class1.get$ret.0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@4
D=A
@SP
D=M-D
@ARG
M=D
@SP
MD=M+1
@LCL
M=D
@class1.get
0; JMP
(class1.get$ret.0)
// call class2.get 0 
@class2.get$ret.0
D=A
@SP
A=M
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@4
D=A
@SP
D=M-D
@ARG
M=D
@SP
MD=M+1
@LCL
M=D
@class2.get
0; JMP
(class2.get$ret.0)
// label while 
(sys.init$while)
// goto while 
@sys.init$while
0; JMP
